% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporal_basis.R
\name{temporal_basis.dpss}
\alias{temporal_basis.dpss}
\title{DPSS Temporal Basis for fMRI}
\usage{
\method{temporal_basis}{dpss}(
  kind,
  n_time,
  n_basis,
  time_bandwidth_product = 3,
  n_tapers = n_basis,
  ...
)
}
\arguments{
\item{kind}{Character scalar, must be "dpss".}

\item{n_time}{Integer number of time points (TRs).}

\item{n_basis}{Integer number of DPSS basis functions to retain.}

\item{time_bandwidth_product}{Numeric controlling frequency concentration.
Lower values (1-2) provide narrower frequency bands but less flexibility.
Higher values (3-4) allow broader frequency content but less concentration.}

\item{n_tapers}{Integer number of tapers to compute (defaults to n_basis).}

\item{...}{Additional arguments (unused).}
}
\description{
Discrete Prolate Spheroidal Sequences (DPSS) provide optimal time-frequency 
localization for spectral analysis. In fMRI applications, DPSS bases can 
preserve BOLD signal frequencies while attenuating scanner artifacts.
}
\section{Choosing time_bandwidth_product for fMRI}{


The `time_bandwidth_product` (NW) controls the trade-off between frequency
resolution and concentration. For fMRI applications:

**For TR = 2s (0.5 Hz Nyquist frequency):**
\itemize{
  \item NW = 1.5: Preserves 0-0.05 Hz (ultra-low frequency BOLD)
  \item NW = 2.0: Preserves 0-0.08 Hz (typical BOLD bandwidth)  
  \item NW = 3.0: Preserves 0-0.12 Hz (includes some task frequencies)
}

**For TR = 1s (1.0 Hz Nyquist frequency):**
\itemize{
  \item NW = 2.0: Preserves 0-0.08 Hz (BOLD signal)
  \item NW = 3.0: Preserves 0-0.12 Hz (BOLD + low task frequencies)
  \item NW = 4.0: Preserves 0-0.16 Hz (includes more task-related signals)
}

**Rule of thumb:** Frequency bandwidth â‰ˆ NW / (n_time * TR)
}

\examples{
\dontrun{
# Example 1: Conservative denoising for resting-state fMRI
# TR = 2s, 300 TRs (10 minutes), preserve 0-0.08 Hz
basis_rest <- temporal_basis("dpss", n_time = 300, n_basis = 12, 
                             time_bandwidth_product = 2.0)

# Example 2: Task fMRI with faster sampling  
# TR = 1s, 400 TRs, preserve 0-0.12 Hz for task frequencies
basis_task <- temporal_basis("dpss", n_time = 400, n_basis = 20,
                             time_bandwidth_product = 3.0)

# Example 3: High-resolution temporal filtering
# TR = 0.8s, 500 TRs, broader bandwidth for event-related designs
basis_event <- temporal_basis("dpss", n_time = 500, n_basis = 25,
                              time_bandwidth_product = 4.0)

# Example 4: Artifact removal while preserving BOLD
# Remove respiratory (~0.3 Hz) and cardiac (~1 Hz) with TR = 1s
# Use NW = 2 to concentrate energy below 0.08 Hz
basis_clean <- temporal_basis("dpss", n_time = 600, n_basis = 15,
                              time_bandwidth_product = 2.0)
}

}
\references{
Thomson, D.J. (1982). Spectrum estimation and harmonic analysis. 
\emph{Proceedings of the IEEE}, 70(9), 1055-1096.

Percival, D.B. & Walden, A.T. (1993). \emph{Spectral Analysis for Physical 
Applications}. Cambridge University Press.
}
