% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experimental_api.R
\name{sparse_pca}
\alias{sparse_pca}
\title{Sparse Principal Component Analysis}
\usage{
sparse_pca(
  data,
  n_components = 10L,
  sparsity_type = c("lasso", "elastic_net", "hard_threshold"),
  sparsity_param = 0.1,
  max_iter = 100L,
  tolerance = 1e-06,
  standardize = TRUE
)
}
\arguments{
\item{data}{Matrix with observations in rows, variables in columns}

\item{n_components}{Number of components to extract (default: 10)}

\item{sparsity_type}{Method for inducing sparsity: "lasso", "elastic_net", "hard_threshold"}

\item{sparsity_param}{Sparsity parameter (lambda for lasso, proportion for threshold)}

\item{max_iter}{Maximum iterations for convergence (default: 100)}

\item{tolerance}{Convergence tolerance (default: 1e-6)}

\item{standardize}{Standardize variables before analysis (default: TRUE)}
}
\value{
List with components, loadings, and diagnostic information
}
\description{
Perform sparse PCA to find interpretable components with automatic
or manual sparsity control. Useful for dimensionality reduction
while maintaining interpretability.
}
\examples{
\donttest{
# Create example data matrix (observations x variables)
set.seed(123)
my_data <- matrix(rnorm(100 * 50), nrow = 100, ncol = 50)
# Add some structure
my_data[, 1:10] <- my_data[, 1:10] + rnorm(100, mean = 2)

# Basic sparse PCA
spca_result <- sparse_pca(my_data, n_components = 5)

# High sparsity for interpretability
sparse_result <- sparse_pca(
  my_data, 
  sparsity_type = "hard_threshold",
  sparsity_param = 0.1  # Keep only 10\% of loadings
)
}

}
