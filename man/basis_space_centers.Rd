% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experimental_api.R
\name{basis_space_centers}
\alias{basis_space_centers}
\title{Generate Poisson-disk sampled spatial basis centers}
\usage{
basis_space_centers(
  mask,
  sigma0 = 6,
  levels = 3L,
  radius_factor = 2.5,
  kernel_type = c("gaussian", "wendland_c4"),
  seed = 1L,
  extra_fine_levels = 0L,
  use_edge_adaptive = FALSE,
  edge_source = c("self_mean", "structural")
)
}
\arguments{
\item{mask}{LogicalNeuroVol defining the spatial domain}

\item{sigma0}{Base width parameter in mm (default: 6)}

\item{levels}{Number of resolution levels (default: 3)}

\item{radius_factor}{Spacing factor for Poisson sampling (default: 2.5)}

\item{kernel_type}{Kernel function: "gaussian" or "wendland_c4" (default: "gaussian")}

\item{seed}{Random seed for reproducible sampling (default: 1)}

\item{extra_fine_levels}{Additional finest-scale levels (default: 0)}

\item{use_edge_adaptive}{Use edge-adaptive sampling if available (default: FALSE)}

\item{edge_source}{Source for edge detection: "self_mean" or "structural" (default: "self_mean")}
}
\value{
List with components:
\itemize{
  \item `centers` - Matrix of center coordinates (world space)
  \item `sigmas` - Vector of width parameters for each center
  \item `levels` - Vector indicating the level of each center
  \item `n_centers` - Total number of centers generated
}
}
\description{
Creates spatially distributed HRBF centers using Poisson-disk sampling
across multiple resolution levels. This is useful for creating adaptive
basis functions that respect the spatial structure of neuroimaging data.
}
\examples{
\donttest{
# Create a simple 3D mask for demonstration
library(neuroim2)
dims <- c(20, 20, 10)
arr <- array(TRUE, dims)
mask <- LogicalNeuroVol(arr, NeuroSpace(dims, spacing = c(2, 2, 2)))

# Basic spatial basis center generation
centers <- basis_space_centers(mask, sigma0 = 4, levels = 2)

# Edge-adaptive sampling (requires structural data)
centers_adaptive <- basis_space_centers(
  mask, 
  use_edge_adaptive = TRUE,
  edge_source = "self_mean"
)

# Fine-scale analysis
centers_fine <- basis_space_centers(
  mask,
  sigma0 = 3,
  levels = 4,
  extra_fine_levels = 2
)
}

}
