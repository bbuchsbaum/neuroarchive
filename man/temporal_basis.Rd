% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporal_basis.R
\name{temporal_basis}
\alias{temporal_basis}
\title{Generate temporal basis matrix}
\usage{
temporal_basis(kind, n_time, n_basis, ...)
}
\arguments{
\item{kind}{Character scalar identifying the basis type. Options include:
\itemize{
  \item \code{"dct"}: Discrete Cosine Transform (fast, general-purpose)
  \item \code{"polynomial"}: Orthogonal polynomials (simple detrending)
  \item \code{"bspline"}: B-spline basis (smooth, flexible trends)
  \item \code{"dpss"}: Discrete Prolate Spheroidal Sequences (optimal spectral concentration)
  \item \code{"wavelet"}: Wavelet basis (time-frequency localization)
}}

\item{n_time}{Integer number of time points.}

\item{n_basis}{Integer number of basis functions.}

\item{...}{Additional arguments passed to methods.}
}
\value{
A basis matrix with dimensions \code{n_time x n_basis}.
}
\description{
Dispatches on \code{kind} to create a temporal basis. Package authors can
extend this generic by defining methods named \code{temporal_basis.<kind>}.
}
\section{Choosing a temporal basis for fMRI}{


\itemize{
  \item \strong{DCT}: Fast, good for general compression. Use when computational speed matters.
  \item \strong{Polynomial}: Simple linear/quadratic detrending. Use for basic drift removal.
  \item \strong{B-spline}: Smooth, flexible trends. Good for slow drift with irregular patterns.
  \item \strong{DPSS}: Optimal frequency concentration. Use when preserving specific BOLD frequencies is critical.
  \item \strong{Wavelet}: Time-frequency localization. Use for non-stationary signals.
}

For most fMRI preprocessing, \code{"dct"} or \code{"polynomial"} suffice. 
Use \code{"dpss"} when you need precise control over frequency content 
(e.g., removing physiological artifacts while preserving BOLD signal).
}

\examples{
# General-purpose DCT basis for compression
dct_basis <- temporal_basis("dct", n_time = 200, n_basis = 50)

# Simple polynomial detrending (linear + quadratic)
poly_basis <- temporal_basis("polynomial", n_time = 200, n_basis = 3)

# DPSS for preserving BOLD frequencies (0-0.08 Hz with TR=2s)
dpss_basis <- temporal_basis("dpss", n_time = 300, n_basis = 12, 
                             time_bandwidth_product = 2.0)

}
