% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hrbf_helpers.R
\name{compute_edge_map_neuroim2}
\alias{compute_edge_map_neuroim2}
\title{Compute edge binary map for neuroim2 volumes}
\usage{
compute_edge_map_neuroim2(source_spec, data_handle, params_edge_adaptive)
}
\arguments{
\item{source_spec}{Character string specifying the source of the
gradient map ("self_mean" or "structural_path").}

\item{data_handle}{A `DataHandle` providing access to the input data
and HDF5 file if required.}

\item{params_edge_adaptive}{List of edge adaptive parameters. Fields
`structural_path`, `structural_to_epi_affine_path`, and
`edge_thresh_k` are used.}
}
\value{
Logical 3D array indicating edge voxels.
}
\description{
Helper used for edge-adaptive HRBF sampling. Depending on
`source_spec`, either computes a Sobel gradient magnitude from the
current data or loads a pre-computed gradient map.
}
\details{
**Performance Warning:** The `self_mean` mode computes 3D Sobel gradients 
using pure R, which is extremely slow on large volumes (≈10 min for 64³). 
For performance-critical applications, consider:
\itemize{
  \item Pre-computing structural gradients and using `structural_path` mode
  \item Installing the Rcpp acceleration (when available): 30-100× faster
  \item Disabling edge-adaptive sampling via parameters
}
If `structural_to_epi_affine_path` is provided and the structural
gradient map dimensions differ from the mask, the map is resampled to
the mask space using `neuroim2`. If no affine is supplied when
dimensions differ, the function throws a `lna_error_validation`.
}
\keyword{internal}
